# See bottom of file for default license and copyright information

package Foswiki::Plugins::GroupUpdatePlugin;

use strict;
use warnings;

use Foswiki::Func    ();
use Foswiki::Plugins ();

our $VERSION = '1.0';
our $RELEASE = '1.0';
our $SHORTDESCRIPTION = 'Dynamically updates group memberships based on wiki content';
our $NO_PREFS_IN_TOPIC = 1;

sub initPlugin {
    my ( $topic, $web, $user, $installWeb ) = @_;
    if ( $Foswiki::Plugins::VERSION < 2.0 ) {
        Foswiki::Func::writeWarning( 'Version mismatch between ',
            __PACKAGE__, ' and Plugins.pm' );
        return 0;
    }

    return 1;
}

sub afterSaveHandler {
    my ( $text, $topic, $web, $error, $meta ) = @_;

    my $cfgtopic = $Foswiki::cfg{GroupUpdatePlugin}{ConfigTopic};
    return $text unless $cfgtopic;

    Foswiki::Func::writeWarning("Load config topic: $cfgtopic");

    my $sourcetopics = $Foswiki::cfg{GroupUpdatePlugin}{SourceTopics};
    return $text if $sourcetopics && ("$web.$topic" !~ /$sourcetopics/);

    Foswiki::Func::writeWarning("Source topic check succeeded");

    my ($cfgmeta) = Foswiki::Func::readTopic(Foswiki::Func::normalizeWebTopicName(undef, $cfgtopic));
    my $cfgtext = $cfgmeta->text;
    Foswiki::Func::setPreferencesValue('groupupdate_base', "$web.$topic");
    $cfgtext = $meta->expandMacros($cfgtext);

    my $mweb = $Foswiki::cfg{UsersWebName};
    for my $l (split(/\n/, $cfgtext)) {
        next if $l !~ /^\|/;
        my ($group, $condition, $members) = ($l =~ /^\| \s* (\w+) \s* \| \s* (.*?) \s* \| \s* (.*?) \s* \| \s* $/x);
        next if $group =~ /^\*/;

        if ($condition) {
            $condition = $meta->expandMacros($condition);
            next if Foswiki::isTrue($condition);
        }

        my $gmeta;
        if (!Foswiki::Func::topicExists($mweb, $group)) {
            $gmeta = Foswiki::Meta->new($Foswiki::Plugins::SESSION, $mweb, $group, 'This group was auto-generated by GroupUpdatePlugin.');
            $gmeta->putKeyed('PREFERENCE', {name => 'GROUP_ALLOW_AUTOUPDATE', value => '1'});
            $gmeta->putKeyed('PREFERENCE', {name => 'ALLOWTOPICCHANGE', value => 'AdminGroup'});
        } else {
            ($gmeta) = Foswiki::Func::readTopic($mweb, $group);
        }
        my $check = $gmeta->get('PREFERENCE', 'GROUP_ALLOW_AUTOUPDATE');
        if (!$check || $check->{value} ne '1') {
            Foswiki::Func::writeWarning("Not updating group because it's not whitelisted: $group");
            next;
        }
        my $oldMembers = $gmeta->get('PREFERENCE', 'GROUP');
        next if $oldMembers && $oldMembers->{value} eq $members;

        $gmeta->putKeyed('PREFERENCE', {name => 'GROUP', value => $members});
        $gmeta->saveAs($gmeta->web, $gmeta->topic);
    }
    # We need to refresh the UnifiedAuth provider, to update the ua database 
    require Foswiki::UnifiedAuth;
    my $ua =  Foswiki::UnifiedAuth->new;
    my $provider = $ua->authProvider($Foswiki::Plugins::SESSION, '__uauth');
    $provider->refresh() if $provider;

    return $text;
}

1;

__END__
Foswiki - The Free and Open Source Wiki, http://foswiki.org/

Author: %$AUTHOR%

Copyright (C) 2008-2015 Foswiki Contributors. Foswiki Contributors
are listed in the AUTHORS file in the root of this distribution.
NOTE: Please extend that file, not this notice.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version. For
more details read LICENSE in the root of this distribution.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

As per the GPL, removal of this notice is prohibited.
